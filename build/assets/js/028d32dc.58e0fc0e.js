"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[3797],{4071:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(3274),d=n(2333);const o={},t="Function: toAddress()",i={id:"build-on-morph/sdk/functions/toAddress",title:"toAddress",description:"[@morph-l2/sdk] \u2022 Docs",source:"@site/docs/build-on-morph/sdk/functions/toAddress.md",sourceDirName:"build-on-morph/sdk/functions",slug:"/build-on-morph/sdk/functions/toAddress",permalink:"/docs/build-on-morph/sdk/functions/toAddress",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/sdk/functions/toAddress.md",tags:[],version:"current",frontMatter:{},sidebar:"DevSidebar",previous:{title:"migratedWithdrawalGasLimit",permalink:"/docs/build-on-morph/sdk/functions/migratedWithdrawalGasLimit"},next:{title:"toBigNumber",permalink:"/docs/build-on-morph/sdk/functions/toBigNumber"}},c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Source",id:"source",level:2}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["[",(0,r.jsx)(s.strong,{children:"@morph-l2/sdk"}),"] \u2022 ",(0,r.jsx)(s.strong,{children:"Docs"})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docs/build-on-morph/sdk/globals",children:"@morph-l2/sdk"})," / toAddress"]}),"\n",(0,r.jsx)(s.h1,{id:"function-toaddress",children:"Function: toAddress()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"toAddress"}),"(",(0,r.jsx)(s.code,{children:"addr"}),"): ",(0,r.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Converts an address-like into a 0x-prefixed address string."}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.p,{children:["\u2022 ",(0,r.jsx)(s.strong,{children:"addr"}),": ",(0,r.jsx)(s.a,{href:"/docs/build-on-morph/sdk/type-aliases/AddressLike",children:(0,r.jsx)(s.code,{children:"AddressLike"})})]}),"\n",(0,r.jsx)(s.p,{children:"Address-like to convert into an address."}),"\n",(0,r.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"string"})}),"\n",(0,r.jsx)(s.p,{children:"Address-like as an address."}),"\n",(0,r.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,r.jsx)(s.p,{children:"src/utils/coercion.ts:104"})]})}function u(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},2333:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>i});var r=n(9474);const d={},o=r.createContext(d);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);