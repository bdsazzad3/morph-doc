"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[8559],{5328:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=o(3274),r=o(2333);const s={title:"Deploy Contracts on Morph",lang:"en-US",keywords:["morph","ethereum","rollup","layer2","validity proof","optimstic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimstic zk-rollup solution. Try it now!"},i=void 0,l={id:"build-on-morph/practical-examples/deploy-contract-on-morph",title:"Deploy Contracts on Morph",description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimstic zk-rollup solution. Try it now!",source:"@site/docs/build-on-morph/practical-examples/1-deploy-contract-on-morph.md",sourceDirName:"build-on-morph/practical-examples",slug:"/build-on-morph/practical-examples/deploy-contract-on-morph",permalink:"/docs/build-on-morph/practical-examples/deploy-contract-on-morph",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/practical-examples/1-deploy-contract-on-morph.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Deploy Contracts on Morph",lang:"en-US",keywords:["morph","ethereum","rollup","layer2","validity proof","optimstic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimstic zk-rollup solution. Try it now!"},sidebar:"DevSidebar",previous:{title:"How to Run a Morph Node",permalink:"/docs/build-on-morph/developer-resources/how-to-run-a-morph-node"},next:{title:"CrossChainMessenger",permalink:"/docs/build-on-morph/sdk/classes/CrossChainMessenger"}},c={},a=[{value:"Deploy contracts with Hardhat",id:"deploy-contracts-with-hardhat",level:2},{value:"Deploy contracts with Foundry",id:"deploy-contracts-with-foundry",level:2},{value:"Questions and Feedback",id:"questions-and-feedback",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The Morph Sepolia Testnet allows anyone to deploy a smart contract on Morph. In this tutorial, you will learn how to deploy a contract on Morph Sepolia using common tools for developing on Ethereum."}),"\n",(0,t.jsxs)(n.p,{children:["This ",(0,t.jsx)(n.a,{href:"https://github.com/morph-l2/morph-examples/tree/main/contract-deploy-demo",children:"demo repo"})," illustrates contract deployment with ",(0,t.jsx)(n.a,{href:"https://hardhat.org/",children:"Hardhat"})," and ",(0,t.jsx)(n.a,{href:"https://github.com/foundry-rs/foundry",children:"Foundry"}),"."]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["Before you start deploying the contract, you need to request test tokens from a Sepolia faucet and use the\n",(0,t.jsx)(n.a,{href:"https://bridge-testnet.morphl2.io",children:"bridge"})," to transfer some test ETH from ",(0,t.jsx)(n.em,{children:"Sepolia"})," to ",(0,t.jsx)(n.em,{children:"Morph Sepolia"}),"."]}),(0,t.jsxs)(n.p,{children:["See our ",(0,t.jsx)(n.a,{href:"/docs/quick-start/faucet",children:"Faucet"})," for details."]})]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-contracts-with-hardhat",children:"Deploy contracts with Hardhat"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If you haven't already, install ",(0,t.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"nodejs"})," and ",(0,t.jsx)(n.a,{href:"https://classic.yarnpkg.com/lang/en/docs/install",children:"yarn"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Clone the repo and install dependencies:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/morph-l2/morph-examples.git\ncd contract-deploy-demo\nyarn install\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file following the example ",(0,t.jsx)(n.code,{children:".env.example"})," in the root directory. Change ",(0,t.jsx)(n.code,{children:"PRIVATE_KEY"})," to your own account private key in the ",(0,t.jsx)(n.code,{children:".env"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"yarn compile"})," to compile the contract."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"yarn deploy:morphTestnet"})," to deploy the contract on the Morph Sepolia Testnet."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"yarn test"})," for hardhat tests."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-contracts-with-foundry",children:"Deploy contracts with Foundry"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Clone the repo:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/morph-l2/morph-examples.git\ncd contract-deploy-demo\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install Foundry:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"curl -L https://foundry.paradigm.xyz | bash\nfoundryup\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"forge build"})," to build the project."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Deploy your contract with Foundry:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"forge create --rpc-url https://rpc-testnet.morphl2.io/ \\\n  --value <lock_amount> \\\n  --constructor-args <unlock_time> \\\n  --private-key <private_key> \\\n  --legacy contracts/Lock.sol:Lock\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<lock_amount>"})," is the amount of test ",(0,t.jsx)(n.code,{children:"ETH"})," to be locked in the contract. Try setting this to some small amount, like ",(0,t.jsx)(n.code,{children:"0.0000001ether"}),";"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<unlock_time>"})," is the Unix timestamp after which the funds locked in the contract will become available for withdrawal. Try setting this to some Unix timestamp in the future, like ",(0,t.jsx)(n.code,{children:"1714492800"})," (this Unix timestamp corresponds to May 1, 2024)."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"forge create --rpc-url https://rpc-testnet.morphl2.io/ \\\n  --value 0.0000001ether \\\n  --constructor-args 1714492800 \\\n  --private-key a123q123q233q231q231q2q1223q23q11q33q113qq31q31231 \\\n  --legacy contracts/Lock.sol:Lock\n"})}),"\n",(0,t.jsx)(n.p,{children:"Once successed, you will see the following message:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Deployer: <Your address>\nDeployed to: <Your contract address>\nTransaction hash: <The deploy transaction hash>\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"questions-and-feedback",children:"Questions and Feedback"}),"\n",(0,t.jsxs)(n.p,{children:["Thank you for participating in and developing on the Morph Sepolia Testnet! If you encounter any issues, join our ",(0,t.jsx)(n.a,{href:"https://discord.com/invite/5SmG4yhzVZ",children:"Discord"})," and find us at #dev-help channel."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},2333:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(9474);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);