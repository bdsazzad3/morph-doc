"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[7e3],{6120:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>a,frontMatter:()=>s,metadata:()=>h,toc:()=>c});var r=t(4848),o=t(8453);const s={title:"How to Run a Morph Node",lang:"en-US"},i=void 0,h={id:"build-on-morph/developer-resources/how-to-run-a-morph-node",title:"How to Run a Morph Node",description:"Run a Morph Node",source:"@site/docs/build-on-morph/developer-resources/2-how-to-run-a-morph-node.md",sourceDirName:"build-on-morph/developer-resources",slug:"/build-on-morph/developer-resources/how-to-run-a-morph-node",permalink:"/docs/build-on-morph/developer-resources/how-to-run-a-morph-node",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/developer-resources/2-how-to-run-a-morph-node.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How to Run a Morph Node",lang:"en-US"},sidebar:"DevSidebar",previous:{title:"Contract Address",permalink:"/docs/build-on-morph/developer-resources/contracts"},next:{title:"CrossChainMessenger",permalink:"/docs/build-on-morph/sdk/classes/CrossChainMessenger"}},d={},c=[{value:"Run a Morph Node",id:"run-a-morph-node",level:2},{value:"Hardware requirements",id:"hardware-requirements",level:3},{value:"Build executable binary",id:"build-executable-binary",level:3},{value:"Build Geth",id:"build-geth",level:4},{value:"Build Node",id:"build-node",level:4},{value:"Sync from genesis block",id:"sync-from-genesis-block",level:3},{value:"Config Preparation",id:"config-preparation",level:4},{value:"Script to start the process",id:"script-to-start-the-process",level:4},{value:"Geth",id:"geth",level:5},{value:"Node",id:"node",level:5},{value:"Check sync status",id:"check-sync-status",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"run-a-morph-node",children:"Run a Morph Node"}),"\n",(0,r.jsxs)(n.p,{children:["This guide describes the approach to starting up a morph node. We create the folder ",(0,r.jsx)(n.code,{children:"~/.morph"})," as our home directory for the following example."]}),"\n",(0,r.jsx)(n.h3,{id:"hardware-requirements",children:"Hardware requirements"}),"\n",(0,r.jsxs)(n.p,{children:["Running the morph node requires 2 processes to be started, which are ",(0,r.jsx)(n.code,{children:"geth"})," and ",(0,r.jsx)(n.code,{children:"node"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Geth"})," is the Morph execution layer which needs to meet the ",(0,r.jsx)(n.a,{href:"https://github.com/ethereum/go-ethereum#hardware-requirements",children:"go-ethereum hardware requirements"}),", but with less storage, 500GB is enough so far."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Node"})," is the Morph consensus layer embedded tendermint which needs to meet the ",(0,r.jsx)(n.a,{href:"https://docs.tendermint.com/v0.34/tendermint-core/running-in-production.html#processor-and-memory",children:"tendermint hardware requirements"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"According to limitations of the current geth implementation, we only support archive mode for launching a Geth.  So the storage size of Geth will constantly increase along with blocks produced."}),"\n",(0,r.jsx)(n.h3,{id:"build-executable-binary",children:"Build executable binary"}),"\n",(0,r.jsx)(n.h4,{id:"build-geth",children:"Build Geth"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Clone ",(0,r.jsx)(n.a,{href:"https://github.com/morph-l2/go-ethereum",children:"go-ethereum"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\nmkdir -p ~/.morph \ncd ~/.morph\ngit clone https://github.com/morph-l2/go-ethereum.git\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Currently, we use tag  ",(0,r.jsx)(n.code,{children:"v0.2.1-beta"})," as our beta version geth."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd go-ethereum\ngit checkout v0.2.1-beta\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Build geth"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"make nccc_geth\n"})}),"\n",(0,r.jsx)(n.h4,{id:"build-node",children:"Build Node"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Clone ",(0,r.jsx)(n.a,{href:"https://github.com/morph-l2/node",children:"node"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd ~/.morph\ngit clone https://github.com/morph-l2/node.git\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Build node"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd node\ngit checkout v0.2.1-beta\nmake build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sync-from-genesis-block",children:"Sync from genesis block"}),"\n",(0,r.jsx)(n.h4,{id:"config-preparation",children:"Config Preparation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Download the config files and make data dir"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd ~/.morph\nwget https://raw.githubusercontent.com/morph-l2/config-template/main/sepolia-beta/data.zip\nunzip data.zip\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"geth-data"})," and ",(0,r.jsx)(n.code,{children:"node-data"})," will be produced under the ",(0,r.jsx)(n.code,{children:"~/.morph"})," like the below"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u251c\u2500\u2500 geth-data\n\u2502\xa0\xa0 \u251c\u2500\u2500 genesis.json\n\u2502\xa0\xa0 \u2514\u2500\u2500 static-nodes.json\n\u2514\u2500\u2500 node-data\n    \u251c\u2500\u2500 config\n    \u2502\xa0\xa0 \u251c\u2500\u2500 config.toml\n    \u2502\xa0\xa0 \u2514\u2500\u2500 genesis.json\n    \u2514\u2500\u2500 data\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Create a shared secret with ",(0,r.jsx)(n.code,{children:"node"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd ~/.morph\nopenssl rand -hex 32 > jwt-secret.txt\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Write geth genesis state locally"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd ~/.morph\n./go-ethereum/build/bin/geth --verbosity=3 init --datadir=~/.morph/geth-data ~/.morph/geth-data/genesis.json\n"})}),"\n",(0,r.jsx)(n.h4,{id:"script-to-start-the-process",children:"Script to start the process"}),"\n",(0,r.jsx)(n.h5,{id:"geth",children:"Geth"}),"\n",(0,r.jsx)(n.p,{children:"This is the script for alpha testnet.  Execute the shell script to start the geth process"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#! /usr/bin/bash\ncd ~/.morph\n\nNETWORK_ID=2710\n\nnohup ./go-ethereum/build/bin/geth \\\n  --datadir=./geth-data \\\n  --verbosity=3 \\\n  --http \\\n  --http.corsdomain="*" \\\n  --http.vhosts="*" \\\n  --http.addr=0.0.0.0 \\\n  --http.port=8545 \\\n  --http.api=web3,debug,eth,txpool,net,morph,engine \\\n  --networkid=$NETWORK_ID \\\n  --authrpc.addr="0.0.0.0" \\\n  --authrpc.port="8551" \\\n  --authrpc.vhosts="*" \\\n  --authrpc.jwtsecret=./jwt-secret.txt \\\n  --miner.gasprice="100000000" \\\n  --gcmode=archive > geth.log 2>&1 &\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"tail -f geth.log"})," to check if the Geth is running properly, or you can also exeucte the below ",(0,r.jsx)(n.code,{children:"curl"})," command to check if you are connected to the peer."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'curl -X POST -H \'Content-Type: application/json\' --data \'{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":74}\' localhost:8545\n{"jsonrpc":"2.0","id":74,"result":"0x6"}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"node",children:"Node"}),"\n",(0,r.jsx)(n.p,{children:"This is the script to start the node process"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#! /usr/bin/bash\ncd ~/.morph\n\nNODE_DATA_DIR="./node-data"\nexport MORPH_NODE_L2_ENGINE_AUTH="./jwt-secret.txt"\nexport MORPH_NODE_L2_ETH_RPC="http://127.0.0.1:8545"\nexport MORPH_NODE_L2_ENGINE_RPC="http://127.0.0.1:8551"\n\nnohup ./node/build/bin/morphnode --home $NODE_DATA_DIR > node.log 2>&1 &\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"tail -f node.log"})," to check if the node is running properly, the expected logs show like the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"I[2023-08-23|18:33:39.599] received complete proposal block             module=consensus height=32 hash=E760BC6642D0BAC98FED9E4AE35544CD701E0C134E51F2A4CF088DA1E156638D\nI[2023-08-23|18:33:39.600] finalizing commit of block                   module=consensus height=32 hash=E760BC6642D0BAC98FED9E4AE35544CD701E0C134E51F2A4CF088DA1E156638D root= num_txs=0\nI[2023-08-23|18:33:39.606] DeliverBlock request                         module=executor txslength=0 l2Configlength=420 zkConfiglength=58 validatorlength=7 blsSignatureslength=7\nI[2023-08-23|18:33:39.606] executed block                               module=state height=32 num_valid_txs=0 num_invalid_txs=0\nI[2023-08-23|18:33:39.610] committed state                              module=state height=32 num_txs=0 app_hash=\nI[2023-08-23|18:33:39.614] indexed block                                module=txindex height=32\n"})}),"\n",(0,r.jsx)(n.p,{children:"And you can also execute the command curl to check your node connection status."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"curl http://localhost:26657/net_info"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  "jsonrpc": "2.0",\n  "id": -1,\n  "result": {\n    "listening": true,\n    "listeners": [\n      "Listener(@)"\n    ],\n    "n_peers": "6",\n    "peers": [\n      {\n        "node_info": {\n          "protocol_version": {\n            "p2p": "8",\n            "block": "11",\n            "app": "0"\n          },\n          "id": "9247d5aac854b009b29c80f177f782c6736f0b03",\n          "listen_addr": "tcp://0.0.0.0:26656",\n          "network": "chain-morph",\n          "version": "0.37.0-alpha.1",\n          "channels": "4020212223386061",\n          "moniker": "eu-sentry1",\n          "other": {\n            "tx_index": "on",\n            "rpc_address": "tcp://0.0.0.0:26657"\n          }\n        },\n    ......      \n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"check-sync-status",children:"Check sync status"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'curl http://localhost:26657/status to check the sync status of the node\n{\n  "jsonrpc": "2.0",\n  "id": -1,\n  "result": {\n    "node_info": {\n      "protocol_version": {\n        "p2p": "8",\n        "block": "11",\n        "app": "0"\n      },\n      "id": "a2a6ff1fac52f5f899c89f9fc3958e133b325f06",\n      "listen_addr": "tcp://0.0.0.0:26656",\n      "network": "chain-morph",\n      "version": "0.37.0-alpha.1",\n      "channels": "4020212223386061",\n      "moniker": "my-morph-node",\n      "other": {\n        "tx_index": "on",\n        "rpc_address": "tcp://0.0.0.0:26657"\n      }\n    },\n    "sync_info": {\n      "latest_block_hash": "ACE931319E480088EC6578B004B28B25F04E3E02B72FD0EABCFD8AED4146511B",\n      "latest_app_hash": "",\n      "latest_block_height": "13229",\n      "latest_block_time": "2024-01-23T20:11:14.042157891Z",\n      "earliest_block_hash": "DACE0A9492B121C810650B673A4818BBA31AF2C2D019DC07DEC643D184752B5A",\n      "earliest_app_hash": "",\n      "earliest_block_height": "1",\n      "earliest_block_time": "2024-01-23T02:00:00Z",\n      "catching_up": true\n    },\n    "validator_info": {\n      "address": "F2C1FDF9409AA9A2FCAF2D7804C88834EC8B08E2",\n      "pub_key": {\n        "type": "tendermint/PubKeyEd25519",\n        "value": "WJWaHG7hh7+CGPyS1YeOEAZ0Rj4+0ujfr0GjOOGey14="\n      },\n      "voting_power": "0"\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:['The returned "catching_up" indicates  whether the node is in sync or not. ',(0,r.jsx)(n.em,{children:"True"})," means it is in sync."]}),"\n",(0,r.jsx)(n.p,{children:"Meanwhile, the returned  latest_block_height indicates the latest block height this node synced."})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>h});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);